<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 演示联表查询：查询出每个学生对应的老师， -->
<mapper namespace="com.mapper.demo5.StudentMapper">

    <!-- 方式一：关联单个 pojo，类似于 SQL 的联表查询 -->
    <resultMap id="stuMap" type="com.pojo.Student">
        <!-- 这里需要加上学生 id 的映射，否则会混淆 -->
        <result column="id" property="id"/>
        <result column="s_name" property="name"/>
        <!-- 一对一的关系映射，配置 teacher 的映射 -->
        <!-- property 指向对象引用，column 指向外键 -->
        <association property="teacher" javaType="com.pojo.Teacher">
            <!-- 这里的 column 使用 student 的外键字段作为 teacher 的 id，否则重名，teacher 的id会取 student 的id -->
            <result column="t_id" property="id"/>
            <result column="t_name" property="name"/>
        </association>
    </resultMap>

    <!--方式一查询子句-->
    <select id="findStudentList" resultMap="stuMap">
        SELECT
            s.*,
            t.*
        FROM
            t_student s,
            t_teacher t
        WHERE s.t_id = t.id
        ORDER BY t.id
    </select>


    <!-- 方式二：分步查询，类似于 SQL 的子查询 -->
    <resultMap id="stuMap2" type="com.pojo.Student">
        <result column="s_name" property="name"/>
        <!-- 嵌套查询语句，实际会调用 select 属性指定的查询并传入 column 指定的属性作为查询条件 -->
        <association column="t_id"
                     property="teacher"
                     javaType="com.pojo.Teacher"
                     select="com.mapper.demo5.TeacherMapper.findById"/>
    </resultMap>

    <!-- 方式二查询子句 -->
    <select id="findStudentList2" resultMap="stuMap2">
        SELECT * from t_student order by t_id
    </select>
</mapper>